require('dotenv').config();
const { dbAll, dbGet } = require('./database/db');
const bcrypt = require('bcryptjs');

async function checkUsers() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î...\n');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const users = await dbAll(`
            SELECT id, email, full_name, is_active, is_admin, password_hash
            FROM users
            ORDER BY full_name
        `);
        
        console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
        console.log('=' .repeat(80));
        
        // –ì—É–∂–æ–≤–∞ –û–ª–µ—Å—è
        const olesya = users.find(u => u.email === 'Gujovaod@gip.su');
        if (olesya) {
            console.log('\nüë§ –ì—É–∂–æ–≤–∞ –û–ª–µ—Å—è:');
            console.log(`  - ID: ${olesya.id}`);
            console.log(`  - Email: ${olesya.email}`);
            console.log(`  - –§–ò–û: ${olesya.full_name}`);
            console.log(`  - –ê–∫—Ç–∏–≤–µ–Ω: ${olesya.is_active}`);
            console.log(`  - –ï—Å—Ç—å –ø–∞—Ä–æ–ª—å: ${olesya.password_hash ? '–î–ê' : '–ù–ï–¢'}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
            const testPassword = 'tcyp2025';
            const isValidPassword = await bcrypt.compare(testPassword, olesya.password_hash);
            console.log(`  - –ü–∞—Ä–æ–ª—å tcyp2025 —Ä–∞–±–æ—Ç–∞–µ—Ç: ${isValidPassword ? '–î–ê' : '–ù–ï–¢'}`);
        } else {
            console.log('\n‚ùå –ì—É–∂–æ–≤–∞ –û–ª–µ—Å—è –ù–ï –ù–ê–ô–î–ï–ù–ê!');
        }
        
        // –ò—â–µ–Ω–∫–æ –ö—Ä–∏—Å—Ç–∏–Ω–∞
        const kristina = users.find(u => u.email === 'k.e.ishchenko@gip.su');
        if (kristina) {
            console.log('\nüë§ –ò—â–µ–Ω–∫–æ –ö—Ä–∏—Å—Ç–∏–Ω–∞:');
            console.log(`  - ID: ${kristina.id}`);
            console.log(`  - Email: ${kristina.email}`);
            console.log(`  - –§–ò–û: ${kristina.full_name}`);
            console.log(`  - –ê–∫—Ç–∏–≤–µ–Ω: ${kristina.is_active}`);
            console.log(`  - –ï—Å—Ç—å –ø–∞—Ä–æ–ª—å: ${kristina.password_hash ? '–î–ê' : '–ù–ï–¢'}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
            const isValidPassword = await bcrypt.compare(testPassword, kristina.password_hash);
            console.log(`  - –ü–∞—Ä–æ–ª—å tcyp2025 —Ä–∞–±–æ—Ç–∞–µ—Ç: ${isValidPassword ? '–î–ê' : '–ù–ï–¢'}`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã email
        console.log('\n\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ email:');
        console.log('=' .repeat(80));
        
        const emailCounts = {};
        users.forEach(user => {
            const email = user.email.toLowerCase();
            emailCounts[email] = (emailCounts[email] || 0) + 1;
        });
        
        const duplicates = Object.entries(emailCounts).filter(([email, count]) => count > 1);
        if (duplicates.length > 0) {
            console.log('‚ùå –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã:');
            duplicates.forEach(([email, count]) => {
                console.log(`  - ${email}: ${count} –∑–∞–ø–∏—Å–µ–π`);
            });
        } else {
            console.log('‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª–µ–π
        console.log('\n\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª–µ–π:');
        console.log('=' .repeat(80));
        
        const noPassword = users.filter(u => !u.password_hash);
        if (noPassword.length > 0) {
            console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –ø–∞—Ä–æ–ª–µ–π (${noPassword.length}):`);
            noPassword.forEach(u => {
                console.log(`  - ${u.full_name} (${u.email})`);
            });
        } else {
            console.log('‚úÖ –£ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –ø–∞—Ä–æ–ª–∏');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const inactive = users.filter(u => !u.is_active);
        if (inactive.length > 0) {
            console.log(`\n‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (${inactive.length}):`);
            inactive.forEach(u => {
                console.log(`  - ${u.full_name} (${u.email})`);
            });
        }
        
        // –°–ø–∏—Å–æ–∫ –ø–µ—Ä–≤—ã—Ö 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('\n\nüìã –ü–µ—Ä–≤—ã–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
        console.log('=' .repeat(80));
        users.slice(0, 10).forEach(u => {
            console.log(`${u.id}. ${u.full_name} (${u.email}) - –ê–∫—Ç–∏–≤–µ–Ω: ${u.is_active}`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    }
    
    process.exit(0);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkUsers();