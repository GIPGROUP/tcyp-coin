const { pool } = require('./db-postgres');

async function fixRouletteSchema() {
    try {
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã roulette_winners...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã
        await pool.query(`
            ALTER TABLE roulette_winners 
            ADD COLUMN IF NOT EXISTS prize_amount INTEGER
        `);
        
        await pool.query(`
            ALTER TABLE roulette_winners 
            ADD COLUMN IF NOT EXISTS drawn_by INTEGER REFERENCES users(id) ON DELETE SET NULL
        `);
        
        // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ amount –≤ prize_amount –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        await pool.query(`
            UPDATE roulette_winners 
            SET prize_amount = COALESCE(prize_amount, amount, 1000)
            WHERE prize_amount IS NULL
        `);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è amount
        await pool.query(`
            UPDATE roulette_winners 
            SET amount = COALESCE(amount, prize_amount, 1000)
            WHERE amount IS NULL
        `);
        
        // –î–µ–ª–∞–µ–º –ø–æ–ª–µ amount –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        try {
            await pool.query(`
                ALTER TABLE roulette_winners 
                ALTER COLUMN amount DROP NOT NULL
            `);
            console.log('‚úÖ –ü–æ–ª–µ amount —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –±—ã—Ç—å NULL');
        } catch (e) {
            // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            try {
                await pool.query(`
                    ALTER TABLE roulette_winners 
                    ALTER COLUMN amount SET DEFAULT 1000
                `);
                console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è amount');
            } catch (e2) {
                console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ amount:', e2.message);
            }
        }
        
        console.log('‚úÖ –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã roulette_winners –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    }
}

module.exports = { fixRouletteSchema };