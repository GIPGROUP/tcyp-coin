const { pool } = require('./database/db-postgres');
const bcrypt = require('bcryptjs');

async function fixAdminPassword() {
    try {
        console.log('üîß –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
        
        // –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        const newPassword = 'admin123';
        const hashedPassword = await bcrypt.hash(newPassword, 10);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞
        const result = await pool.query(
            'UPDATE users SET password_hash = $1 WHERE email = $2',
            [hashedPassword, 'admin@tcyp.ru']
        );
        
        if (result.rowCount > 0) {
            console.log('‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω');
            console.log('üìß Email: admin@tcyp.ru');
            console.log('üîë –ü–∞—Ä–æ–ª—å: admin123');
        } else {
            console.log('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const users = await pool.query('SELECT email, full_name, is_admin FROM users LIMIT 5');
        console.log('\nüë• –ü–µ—Ä–≤—ã–µ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î:');
        users.rows.forEach(user => {
            console.log(`- ${user.email} (${user.full_name}) ${user.is_admin ? '[ADMIN]' : ''}`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        await pool.end();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
fixAdminPassword();