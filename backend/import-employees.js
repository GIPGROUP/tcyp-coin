const fs = require('fs');
const bcrypt = require('bcryptjs');
const db = require('./database/db');

// –ü—Ä–∏–º–µ—Ä CSV —Ñ–∞–π–ª–∞:
// email,full_name,department,position
// ivanov@tcyp.ru,–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á,IT,–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
// petrov@tcyp.ru,–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á,–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥,–ú–µ–Ω–µ–¥–∂–µ—Ä

async function importEmployeesFromCSV(csvFilePath) {
    try {
        // –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
        const csvData = fs.readFileSync(csvFilePath, 'utf-8');
        const lines = csvData.split('\n');
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const employees = lines.slice(1).filter(line => line.trim());
        
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${employees.length} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞`);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
        const tempPassword = 'tcyp2024'; // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö
        const hashedPassword = await bcrypt.hash(tempPassword, 10);
        
        let successCount = 0;
        let errorCount = 0;
        
        for (const line of employees) {
            const [email, full_name, department, position] = line.split(',').map(field => field.trim());
            
            if (!email || !full_name) {
                console.log(`–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö`);
                errorCount++;
                continue;
            }
            
            try {
                db.prepare(`
                    INSERT INTO users (email, password, full_name, department, position, balance, is_admin)
                    VALUES (?, ?, ?, ?, ?, 0, 0)
                `).run(email, hashedPassword, full_name, department || '–ù–µ —É–∫–∞–∑–∞–Ω', position || '–°–æ—Ç—Ä—É–¥–Ω–∏–∫');
                
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${full_name} (${email})`);
                successCount++;
            } catch (error) {
                if (error.message.includes('UNIQUE')) {
                    console.log(`‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
                } else {
                    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ${email}:`, error.message);
                }
                errorCount++;
            }
        }
        
        console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∞:`);
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${successCount}`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
        console.log(`\nüîë –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö: ${tempPassword}`);
        console.log(`‚ö†Ô∏è  –ü–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ!`);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// node import-employees.js employees.csv
const csvFile = process.argv[2];
if (!csvFile) {
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node import-employees.js <–ø—É—Ç—å_–∫_csv_—Ñ–∞–π–ª—É>');
    console.log('\n–§–æ—Ä–º–∞—Ç CSV —Ñ–∞–π–ª–∞:');
    console.log('email,full_name,department,position');
    console.log('ivanov@tcyp.ru,–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á,IT,–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫');
    process.exit(1);
}

importEmployeesFromCSV(csvFile);