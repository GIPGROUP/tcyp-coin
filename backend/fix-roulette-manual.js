require('dotenv').config();

async function fixRouletteManual() {
    const isPostgreSQL = process.env.NODE_ENV === 'production' && process.env.DATABASE_URL;
    
    if (!isPostgreSQL) {
        console.log('‚ö†Ô∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è PostgreSQL');
        process.exit(0);
    }
    
    const { pool } = require('./database/db-postgres');
    
    try {
        console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É roulette_winners...\n');
        
        // –°–º–æ—Ç—Ä–∏–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        const columns = await pool.query(`
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'roulette_winners'
            ORDER BY ordinal_position
        `);
        
        console.log('üìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:');
        columns.rows.forEach(col => {
            console.log(`  - ${col.column_name}: ${col.data_type} (nullable: ${col.is_nullable}, default: ${col.column_default || 'none'})`);
        });
        
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É
        console.log('\nüîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');
        
        // 1. –î–µ–ª–∞–µ–º amount nullable
        try {
            await pool.query('ALTER TABLE roulette_winners ALTER COLUMN amount DROP NOT NULL');
            console.log('‚úÖ –ü–æ–ª–µ amount —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –±—ã—Ç—å NULL');
        } catch (e) {
            console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å amount nullable:', e.message);
        }
        
        // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        try {
            await pool.query('ALTER TABLE roulette_winners ALTER COLUMN amount SET DEFAULT 1000');
            console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1000 –¥–ª—è amount');
        } catch (e) {
            console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', e.message);
        }
        
        // 3. –ó–∞–ø–æ–ª–Ω—è–µ–º NULL –∑–Ω–∞—á–µ–Ω–∏—è
        const updateResult = await pool.query(`
            UPDATE roulette_winners 
            SET amount = COALESCE(amount, prize_amount, 1000)
            WHERE amount IS NULL
        `);
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updateResult.rowCount} –∑–∞–ø–∏—Å–µ–π —Å NULL amount`);
        
        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        const winners = await pool.query('SELECT * FROM roulette_winners ORDER BY created_at DESC LIMIT 5');
        console.log(`\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ (–≤—Å–µ–≥–æ: ${winners.rowCount}):`);
        winners.rows.forEach(w => {
            console.log(`  - user_id: ${w.user_id}, amount: ${w.amount}, prize_amount: ${w.prize_amount}, year: ${w.year}, week: ${w.week_number}`);
        });
        
        // 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        console.log('\nüìã –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:');
        const finalColumns = await pool.query(`
            SELECT column_name, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'roulette_winners' 
            AND column_name IN ('amount', 'prize_amount', 'week_number', 'year')
        `);
        
        finalColumns.rows.forEach(col => {
            console.log(`  - ${col.column_name}: nullable=${col.is_nullable}, default=${col.column_default || 'none'}`);
        });
        
        console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    } finally {
        await pool.end();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
fixRouletteManual();